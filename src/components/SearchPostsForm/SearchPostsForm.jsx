import { ErrorMessage, Field, Form, Formik } from "formik";
import * as Yup from "yup";

import css from "./SearchPostsForm.module.css";

const SearchPostsValidationSchema = Yup.object().shape({
  searchTerm: Yup.string()
    .required("–ü–æ—à—É–∫–æ–≤–µ —Å–ª–æ–≤–æ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º")
    .min(2, "–ü–æ—à—É–∫–æ–≤–µ —Å–ª–æ–≤–æ –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º –≤ 2 —Å–∏–º–≤–æ–ª–∏")
    .max(100, "–ü–æ—à—É–∫–æ–≤–µ —Å–ª–æ–≤–æ –º–∞—î –±—É—Ç–∏ –º–µ–Ω—à–∏–º –∑–∞ 100 —Å–∏–º–≤–æ–ª—ñ–≤"),
});

const SearchPostsForm = ({ onSearch, defaultSearchValue }) => {
  const INITIAL_VALUES = {
    searchTerm: defaultSearchValue || "",
  };

  const handleSubmit = (values) => {
    onSearch(values.searchTerm);
  };

  return (
    <Formik
      initialValues={INITIAL_VALUES}
      onSubmit={handleSubmit}
      validationSchema={SearchPostsValidationSchema}
    >
      {({ errors }) => (
        <Form className={css.form}>
          <label className={css.label}>
            <span>–ó–Ω–∞–π—Ç–∏ –ø–æ—Å—Ç–∏ –∑–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º:</span>
            <Field type="text" name="searchTerm" placeholder="Love..." />
            <ErrorMessage
              className={css.errorText}
              name="searchTerm"
              component="span"
            />
          </label>

          <button
            disabled={Object.keys(errors).length > 0}
            className={css.submitBtn}
            type="submit"
          >
            üîç Search Posts
          </button>
        </Form>
      )}
    </Formik>
  );
};

export default SearchPostsForm;
